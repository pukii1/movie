- add color scheme in scss
- set up project in firebase console
- add firebase to react project


- added ui for login + signup components
- added email signup and login feature (no routing yet)

- added routing through custom private-/public route comps and conditional rendering based on authentication state

- added loading screen and makeshift logo

- added user navbar icons (used react icons instead of fontawesome) + added Dev component to circumvent the login routing 
  for developing the other comps etc.
- added data component as a container for the api data (added general header navigation [allows switching between movies/TV series]
  + navbar for navigating between default popular selection + entire collection)
- fixed navigation errors + added basic page components like Search, Favs, User and Home ("/") + added Header component for said pages

- completed header-navbar w user dropdown menu w navigation to the user page and the signout feature
- fixed movie card styling + carousel rotation logic + movie img rendering (initial render displayed wrong img bc data prop hadnt been passed down yet)
- actually fixed rotation logic, added some styles to the movie comps + added login/signup comp to user profile page 
  + added redirect to homepage after login
- added conditional display of login/signout option in the dropdown menu of the header comp depending on the users auth state

- changed component folder structure, added innerComponents + sharedComponents folder (saw that on YT) 
  + added conditional display in Favs comp w button to user login page if user not logged in 
  + added UI for liking movie on homepage
  
- fixed movie service + added "create new doc in favs-db if user-doc doesnt already exist" feature
- added "logo" icon to userNavbar -> navigates to homepage on onClick
- added movieFetching feature for logged in users on the Favs page 
- modified movie fetching -> now all movie data is cached/removed from cache when user likes a movie /removes it from their likes
  + Favs fetches liked movies from cache to minimize chained API calls + added like/remove from likes feature to movies displayed in Favs
- added firestore snapshot listener to update list of liked movies in real time on the Favs page when user removes a movie from their likedMovies list
- added Design credit ('You are launched' on Dribbble)

TODO: divide Favs into movies + tv series, similar UI to the homepage ("/"), implement movies/tv-series separation in DB + cache too
TODO: add design credits DONE
TODO: use firestore onSnapshot listener to communicate updates made to the cache on the Favs page to Favs page without needing to refresh page DONE
TODO: cache favs + only fetch from firestore if not already in cache + place function in movieService.js DONE
TODO: reset Pwd + continue working on user/profile page layout
TODO: add comments!!!
TODO: fix movie img fetching loading animation DONE
TODO: add drop down user menu to Header comp w link to user profile page and sign out button DONE
TODO: add google signUp DONE
TODO: add google login DONE
TODO: add logout feature DONE
TODO: add user header DONE
TODO: signup + login error handling 
    handled errors:
    SignUp{ "email-already-exists", "invalid-email" }
    Login { "user-not-found", "wrong-password", "invalid-email" }

TODO: routing DONE